name: Copy Files or Directories from Input Branch

on:
  workflow_dispatch:
    inputs:
      source_branch:
        description: "Source branch to copy files or directories from"
        required: true
        default: "copybranch"
      source_paths:
        description: "Comma-separated list of files or directories in the source branch"
        required: true
        default: "Dockerfile,src,testcopy,test2"
      target_path:
        description: "Target path for the copied files or directories"
        required: true
        default: "target"

jobs:
  copy-files:
    runs-on: windows-latest  # Changed to Windows runner

    steps:
      # Step 1: Checkout the source branch
      - name: Checkout Source Branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.source_branch }}

      # Step 2: Create target directory
      - name: Create Target Directory
        run: New-Item -Path ${{ github.event.inputs.target_path }} -ItemType Directory -Force

      # Step 3: Copy multiple files or directories using PowerShell
      - name: Copy Files or Directories
        shell: pwsh
        run: |
          # Convert the comma-separated list to an array
          $sourcePaths = "${{ github.event.inputs.source_paths }}" -split ","
          
          # Loop through the paths and copy files or directories
          foreach ($sourcePath in $sourcePaths) {
            if (Test-Path $sourcePath -PathType Leaf) {
              # Input is a file
              Write-Host "Copying file: $sourcePath"
              Copy-Item $sourcePath -Destination ${{ github.event.inputs.target_path }} -Force
            }
            elseif (Test-Path $sourcePath -PathType Container) {
              # Input is a directory
              Write-Host "Copying directory: $sourcePath"
              Copy-Item $sourcePath -Destination ${{ github.event.inputs.target_path }} -Recurse -Force
            }
            else {
              Write-Host "The specified source path $sourcePath does not exist."
              exit 1
            }
          }

      # Step 4: Verify copied files or directories
      - name: Verify Target Path Contents
        shell: pwsh
        run: |
          Get-ChildItem ${{ github.event.inputs.target_path }}
