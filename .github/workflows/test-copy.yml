name: Copy Files to Network Share, Wait for Approval, and Commit to Main Branch

on:
  workflow_dispatch:
    inputs:
      Source_Folder:
        description: "Comma-separated list of branch/files (e.g. 'copybranch/Dockerfile,copybranch/src/config.json')"
        required: true
        default: "copybranch/Dockerfile,copybranch/src/config.json"
      Target_Folder:
        description: "Network share path for the copied files (e.g. '\\\\network\\share\\target')"
        required: true
        default: "temp"

jobs:
  copy-to-network-share:
    runs-on: windows-latest  # Windows runner

    steps:
      # Step 1: Checkout the source branch
      - name: Checkout Source Branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref || github.ref }}

      # Step 2: Create Main Directory on Network Share if not exists
      - name: Create Main Directory on Network Share
        shell: pwsh
        run: |
          $targetDir = "${{ github.event.inputs.Target_Folder }}"
          if (!(Test-Path $targetDir)) {
            Write-Host "Creating Main directory: $targetDir"
            New-Item -ItemType Directory -Path $targetDir
          } else {
            Write-Host "Main directory already exists: $targetDir"
          }

      # Step 3: Delete existing files from the target directory
      - name: Delete Existing Files from Directory
        shell: pwsh
        run: |
          $targetDir = "${{ github.event.inputs.Target_Folder }}"
          Write-Host "Deleting existing files in directory: $targetDir"
          Get-ChildItem -Path $targetDir -Recurse | Remove-Item -Force -Recurse

      # Step 4: Create Validation Directory on Network Share
      - name: Create Validation Directory on Network Share
        shell: pwsh
        run: |
          $validationDir = "${{ github.event.inputs.Target_Folder }}/test-validation/"
          if (!(Test-Path $validationDir)) {
            Write-Host "Creating Validation directory: $validationDir"
            New-Item -ItemType Directory -Path $validationDir
          } else {
            Write-Host "Validation directory already exists: $validationDir"
          }

      # Step 5: Copy files from the source branches to the network share
      - name: Copy Files to Network Share
        shell: pwsh
        run: |
          # Split the comma-separated list of source paths
          $sourcePaths = "${{ github.event.inputs.Source_Folder }}" -split ","

          foreach ($sourcePath in $sourcePaths) {
              # Split each source path into branch and file path
              $parts = $sourcePath -split "/"
              $branch = $parts[0]
              $path = $parts[1]

              # Log the branch and file to be processed
              Write-Host "Checking out branch: $branch"
              
              # Fetch and checkout the specified branch
              git fetch origin $branch
              git checkout $branch

              # Get the list of files in the specified path (in case it's a folder)
              $files = Get-ChildItem -Path $path -File

              # Loop through each file in the path and copy it to the target folder
              foreach ($file in $files) {
                  $originalFileName = $file.FullName
                  $myrev = $env:GITHUB_ID # Use GitHub Run ID
                  
                  # Create a new unique name for the file
                  $name = $file.BaseName + "-" + $myrev + $file.Extension
                  
                  # Log the file that's being copied
                  Write-Host "Copying file: $originalFileName to $($github.event.inputs.Target_Folder)\$name"

                  # Copy the file to the target folder with the new name
                  Copy-Item $originalFileName -Destination "$($github.event.inputs.Target_Folder)\$name" -Force
              }
          }
