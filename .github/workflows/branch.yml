name: Create Dynamic Branch with Selected File Only

on:
  workflow_dispatch:
    inputs:
      file_to_copy:
        description: 'Select a file to copy into the new branch'
        required: true
        type: choice
        options:
          - Dockerfile
          - README.md
          - src/Dockerfile  # Example if it's in a folder
          - LICENSE
          - index.html

jobs:
  create-branch:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Ensure the job has write permission to modify repository contents

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v3

    - name: Set up Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        
    - name: Get current branch name
      id: get_branch
      run: |
        BASE_BRANCH=$(git rev-parse --abbrev-ref HEAD)  # Get the current branch name
        echo "BASE_BRANCH=$BASE_BRANCH" >> $GITHUB_ENV  # Export the base branch name to environment variable
        echo "Current base branch is: $BASE_BRANCH"

    - name: Generate dynamic branch name
      id: generate_branch
      run: |
        # Generate date and UUID suffix
        DATE_SUFFIX=$(date +%Y%m%d%H%M%S)  # Date format: YYYYMMDDHHMMSS
        UUID_SUFFIX=$(uuidgen)  # Generate a UUID
        DYNAMIC_SUFFIX="${DATE_SUFFIX}-${UUID_SUFFIX}"
        
        # Create the new branch name by combining the base branch with the dynamic suffix
        NEW_BRANCH="${BASE_BRANCH}-${DYNAMIC_SUFFIX}"
        echo "NEW_BRANCH=$NEW_BRANCH" >> $GITHUB_ENV  # Export the new branch name
        echo "Generated new branch name: $NEW_BRANCH"

    - name: Create new branch
      run: |
        git checkout -b $NEW_BRANCH  # Create a new branch from the current branch

    - name: Create temp folder to backup selected file
      run: |
        mkdir -p ./temp  # Ensure temp folder exists

    - name: Backup selected file
      run: |
        FILE="${{ github.event.inputs.file_to_copy }}"
        echo "Backing up $FILE to a temporary location"
        
        # Ensure the file exists and copy it to the temp folder
        if [ -e "$FILE" ]; then
          cp -r "$FILE" ./temp/  # Backup the selected file to the temp folder
          echo "$FILE successfully backed up."
        else
          echo "Error: $FILE not found in the repository."
          exit 1
        fi

        # Debug: List files in the temp folder to confirm the backup
        echo "Files in temp folder:"
        ls -al ./temp

    - name: Remove all files from the new branch except the temp folder
      run: |
        echo "Removing all files except the selected one."
        
        # Remove everything in the current directory except the temp folder
        find . -mindepth 1 -not -name 'temp' -exec rm -rf {} +  # Remove all files except 'temp' folder

    - name: Restore selected file to the new branch
      run: |
        FILE="${{ github.event.inputs.file_to_copy }}"
        echo "Restoring $FILE to the new branch"
        
        # Debug: Check if the file exists in the temp folder
        echo "Files in temp folder before restoring:"
        ls -al ./temp
        
        # Restore the selected file from the temp folder to the root of the branch
        if [ -e "./temp/$FILE" ]; then
          cp -r ./temp/$FILE .  # Restore the file from the temp folder to the root of the branch
          echo "$FILE restored successfully."
        else
          echo "Error: $FILE not found in temp folder."
          exit 1
        fi
        
        rm -rf ./temp  # Clean up the temporary folder

    - name: Commit changes
      run: |
        git add .
        git commit -m "Add selected file ($FILE) to $NEW_BRANCH"

    - name: Push the new branch
      run: |
        git push origin $NEW_BRANCH  # Push the new branch to the remote repository
